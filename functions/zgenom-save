#!/usr/bin/env zsh

function zgenom-save() {
    __zgenom_err 'Creating `'"${ZGEN_INIT}"'` ...'

    __zgenom_out "# {{{" >! "${ZGEN_INIT}"
    -zginit "# Generated by zgenom."
    -zginit "# This file will be overwritten the next time you run zgenom save!"
    -zginit ""
    -zginit "export PMSPEC=$PMSPEC"
    -zginit "export ZPFX=$ZPFX"
    -zginit ""
    -zginit "ZGENOM_PLUGINS=(${(@qOa)ZGENOM_PLUGINS})"
    if [[ -n $ZSH ]]; then
        -zginit ""
        -zginit "ZSH=$ZSH"
    fi
    if [[ ${ZGEN_USE_PREZTO} == 1 ]]; then
        -zginit ""
        -zginit "# ### Prezto initialization"
        for option in "${ZGEN_PREZTO_OPTIONS[@]}"; do
            -zginit "${option}"
        done
    fi

    # Set up fpath, load completions
    # NOTE: This *intentionally* doesn't use ${ZGEN_COMPINIT_FLAGS}; the only
    #       available flags are meaningless in the presence of `-C`.
    -zginit ""
    -zginit "# ### Plugins & Completions"
    -zginit 'fpath=('"${(@qOa)ZGEN_COMPLETIONS}"' ${fpath})'

    local file
    -zginit ""
    -zginit "# ### General modules"
    -zginit "typeset -ga zsh_loaded_plugins"
    for i in {1.."${#ZGEN_LOADED}"}; do
        file="${ZGEN_LOADED[$i]}"
        -zginit "zsh_loaded_plugins+=( ${(qqq)ZGENOM_LOADED[$i]} )"
        -zginit "ZERO=${(qqq)file} source ${(qqq)file}"
    done

    if [[ ${ZGEN_AUTOLOAD_COMPINIT} == 1 ]]; then
        -zginit ""
        -zginit 'autoload -Uz compinit && \'
        -zginit '   compinit -C '"${ZGEN_COMPINIT_DIR_FLAG}"
    fi

    if [[ -d $ZGENOM_SOURCE_BIN ]]; then
        -zginit ""
        -zginit "# ### Bins"
        -zginit 'path=('$ZGENOM_SOURCE_BIN' ${path})'
    fi

    # Check for file changes
    if [[ ! -z "${ZGEN_RESET_ON_CHANGE}" ]]; then
        -zginit ""
        -zginit "# ### Recompilation triggers"

        local ages="$(command stat -Lc "%Y" 2>/dev/null $ZGEN_RESET_ON_CHANGE || \
                      command stat -Lf "%m" 2>/dev/null $ZGEN_RESET_ON_CHANGE)"
        local shas="$(cksum ${ZGEN_RESET_ON_CHANGE})"

        -zginit "read -rd '' ages <<AGES; read -rd '' shas <<SHAS"
        -zginit "$ages"
        -zginit "AGES"
        -zginit "$shas"
        -zginit "SHAS"

        -zginit 'if [[ -n "$ZGEN_RESET_ON_CHANGE" \'
        -zginit '   && "$(command stat -Lc "%Y" 2>/dev/null $ZGEN_RESET_ON_CHANGE || \'
        -zginit '         command stat -Lf "%m"             $ZGEN_RESET_ON_CHANGE)" != "$ages" \'
        -zginit '   && "$(cksum                     $ZGEN_RESET_ON_CHANGE)" != "$shas" ]]; then'
        -zginit '   printf %s\\n '\''-- zgenom: Files in $ZGEN_RESET_ON_CHANGE changed; resetting `init.zsh`...'\'
        -zginit '   zgenom reset'
        -zginit 'fi'
    fi

    # load prezto modules
    if [[ ${ZGEN_USE_PREZTO} == 1 ]]; then
        -zginit ""
        -zginit "# ### Prezto modules"
        printf %s "pmodload" >> "${ZGEN_INIT}"
        for module in "${ZGEN_PREZTO_LOAD[@]}"; do
            printf %s " ${module}" >> "${ZGEN_INIT}"
        done
    fi

    -zginit ""
    -zginit "# }}}"

    zgenom-apply

    __zgenom_err "Compiling files ..."
    zgenom-compile $ZGEN_SOURCE
    if [[ $ZGEN_DIR != $ZGEN_SOURCE ]] && [[ $ZGEN_DIR != $ZGEN_SOURCE/* ]]; then
        # Compile ZGEN_DIR if not subdirectory of ZGEN_SOURCE
        zgenom-compile $ZGEN_DIR
    fi

    if [[ -n $ZGEN_CUSTOM_COMPDUMP ]]; then
        -zgen-compile $ZGEN_CUSTOM_COMPDUMP
    else
        setopt localoptions nullglob
        for compdump in $HOME/.zcompdump*; do
            if [[ $compdump = *.zwc ]] || [[ ! -r $compdump ]]; then
                continue
            fi
            -zgen-compile $compdump
        done
    fi
}

zgenom-save $@
